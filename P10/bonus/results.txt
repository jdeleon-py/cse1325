====================
HOMEWORK P10 RESULTS
====================

Spring 2021


FULL CREDIT
===========

QUESTION 1: Which puzzles did you use to achieve around a 30 second runtime:

Solving all 100 puzzles achieved a ~30 second runtime.


QUESTION 2: Provide the output of ``timeit`` (or ``time ./wssolver 1 puzzles/puzzle*.txt`` for runs with 1 through 16 threads below. You can run all of these with a single bash command if you like: ``for i in {1..16} ; do time ./wssolver $i puzzles/puzzles*.txt ; done``

Example Timing:

ricegf@antares:~/dev/202101/P10/baseline$ ./timeit

real  0m15.435s
user  0m15.395s
sys   0m0.028s



YOUR Timing:

student@maverick:~/Documents/cse1325/P10/full_credit@ time ./wssolver puzzles/puzzle*.txt

real	0m17.786s
user	0m17.337s
sys	0m0.441s




QUESTION 3: Does adding more threads continue to speed up the program? Do more threads ever slow down the program slightly?  Why or why not?

Adding as many threads as there are cores in the computer's cpu speeds up the program.
If more threads are added, the program will start to slow down. The number of available cores is finite bottlenecks the amount of threads
introduced at a given time.



QUESTION 4: Does adding more threads increase the "system load", or is it constant regardless of the number of threads?  Why?
The system load remains the same regardless the number of threads present. As the number of threads increase, the current
flow of information being processed increases, which speeds up the computation of a constant system load.



BONUS
=====

QUESTION 5: Provide the output of ``timeit`` (or ``time ./wssolver 1 puzzles/puzzle*.txt``) for runs with (at least) 1, 2, and 4 threads below. 


YOUR Timing:

student@maverick:~/Documents/cse1325/P10/bonus@ time ./wssolver 1 puzzles/puzzle??.txt

real    0m31.080s
user    0m30.963s
sys     0m0.011s


student@maverick:~/Documents/cse1325/P10/bonus@ time ./wssolver 2 puzzles/puzzle??.txt

real    0m24.128s
user    0m23.977s
sys     0m0.041s


student@maverick:~/Documents/cse1325/P10/bonus@ time ./wssolver 4 puzzles/puzzle??.txt

real    0m13.451s
user    0m13.439s
sys     0m0.009s



QUESTION 6: Does the thread pool approach you used in the Bonus section run substantially faster than the hard allocations use in the Full Credit section?

The thread pool approach is ideal, since the section runs for a few seconds faster than the hard allocation section, and
since the program can use any variation of threads at an instant.



EXTREME BONUS
=============

QUESTION 7: BRIEFLY summarize your strategies for optimizing the solution of word search puzzles.






QUESTION 8: In the performance competition, how would you like to be identified to the class? (Your real name is fine, or any professional alias is acceptable.)



